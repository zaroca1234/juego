// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using juego.Contexto;

#nullable disable

namespace juego.Migrations
{
    [DbContext(typeof(VideoJuegoContext))]
    partial class VideoJuegoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("juego.Modelos.FuenteEnergia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsRenovable")
                        .HasColumnType("bit");

                    b.Property<int>("NivelEnergia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("FuentesEnergia");
                });

            modelBuilder.Entity("juego.Modelos.Jugador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Constrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnergiaAcumulada")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("juego.Modelos.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadProduccion")
                        .HasColumnType("int");

                    b.Property<int>("FuenteEnergiaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FuenteEnergiaId");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("juego.Modelos.PlantaJugador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JugadorId");

                    b.HasIndex("PlantaId");

                    b.ToTable("PlantasJugador");
                });

            modelBuilder.Entity("juego.Modelos.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("juego.Modelos.FuenteEnergia", b =>
                {
                    b.HasOne("juego.Modelos.Region", "Region")
                        .WithMany("FuentesEnergia")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("juego.Modelos.Planta", b =>
                {
                    b.HasOne("juego.Modelos.FuenteEnergia", "FuenteEnergia")
                        .WithMany("Plantas")
                        .HasForeignKey("FuenteEnergiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FuenteEnergia");
                });

            modelBuilder.Entity("juego.Modelos.PlantaJugador", b =>
                {
                    b.HasOne("juego.Modelos.Jugador", "Jugador")
                        .WithMany("PlantasJugador")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("juego.Modelos.Planta", "Planta")
                        .WithMany("PlantasJugador")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jugador");

                    b.Navigation("Planta");
                });

            modelBuilder.Entity("juego.Modelos.FuenteEnergia", b =>
                {
                    b.Navigation("Plantas");
                });

            modelBuilder.Entity("juego.Modelos.Jugador", b =>
                {
                    b.Navigation("PlantasJugador");
                });

            modelBuilder.Entity("juego.Modelos.Planta", b =>
                {
                    b.Navigation("PlantasJugador");
                });

            modelBuilder.Entity("juego.Modelos.Region", b =>
                {
                    b.Navigation("FuentesEnergia");
                });
#pragma warning restore 612, 618
        }
    }
}
